# -*- coding: utf-8 -*-

"""factory.py:
This module provides the Factory class for Bokeh UI widgets for 
testing and controlling 2D image sensors
"""

__author__ = "Zhi Zi"
__email__ = "x@zzi.io"
__version__ = "20221103"


from .bundle_bokeh import BundleBokehCamera


class FactoryCamera:
    """
    This class is responsible for generating BundleCamera objects 
    from given params in a bundle configuration

    Note that a bundle configuration is different from a lab config in that it is very likely
    un-serializable to JSON, because the config probably holds references to arrays or other
    object references.
    The bundle config is only generated in-place when bundle generation is required by a higher
    level application, so it is not needed to be serialized or stored or transfered to other
    applications or modules anyway.
    Lab configs, in contrast, must always be serializable and is passed around everywhere.

    We assume the higher-level application knows how to use the object when it requires a 
    specific type of bundle by specifying the bundle type in the bundle config, although
    generated by the same generate_bundle method.
    """

    def __init__(self, lcfg, lstat) -> None:
        self.lcfg = lcfg
        self.lstat = lstat
        self.generated = dict()

    def generate_bundle(self, bundle_config: dict):
        """
        actually generates the bundle
            bundle_config:  dict that contains all information needed to generate
                             the bundle
                            required fields: 
                                "Config" : config dict of target device

        for now only bokeh bundle is used, so direct generation, 
        if more are required, then the fork goes here
        """
        # sanity check
        name = bundle_config["Config"]["Name"]
        if name in self.generated:
            print(
                "[SANITY] FactoryCamera: BundleCamera with name {} \
                    already generated before!".format(name))
        # if bundle_config[widget_package]==bokeh ->
        foo = BundleBokehCamera(bundle_config, self.lcfg, self.lstat)
        self.generated[name] = foo
        return foo
        # endif
